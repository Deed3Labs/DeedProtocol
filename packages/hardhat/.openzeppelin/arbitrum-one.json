{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xf8A230a96EDEB176b3e3d8b1Fa0A8412EDaF867c",
      "txHash": "0x1259877dc02910db49c27f5d756cd18b07f975e17a3cf1f57e8ea4c42d8f3358",
      "kind": "transparent"
    },
    {
      "address": "0x27507b4e017B411F3aCcBaD2027f667EE004bdEE",
      "txHash": "0xb6e8339dc34795119d56a8b8649e9b9394ac19d624f104c61e741e396529ae69",
      "kind": "transparent"
    },
    {
      "address": "0x8E8c78A8ceAf24c36C5A84B8EaA40b0B15B35579",
      "txHash": "0x16c0aa0957cc4730bb8f8c908d2056edb7dda2f05cde5b8120a0ff81518ad648",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1f316e442a055454d4ae9a9c32ef7a434ca57c97171f409a65cc1ee4ca78b0b7": {
      "address": "0xf8DDf4e4C2A1a08848cfFA835791b4c1721D58B1",
      "txHash": "0xf0453c880850f949a541f9ada3cca13009beb4830fe39e0c24f2426773babde0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "AccessManager",
            "src": "contracts/AccessManager.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "eb1e4e51e8556ce618c594bef137a04663ead3048721ef5ddea77ba898ab3b8e": {
      "address": "0x8E0CdcF47a394d511AA3b25c14e99eFa8dA68845",
      "txHash": "0x4a944f9e66cc8813f6845c124f68132676924c9bbd6f5107f8444eb309dcb721",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "accessManager",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(AccessManager)4331",
            "contract": "AccessManagerBase",
            "src": "contracts/AccessManager.sol:74"
          },
          {
            "label": "nextDeedId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/DeedNFT.sol:15"
          },
          {
            "label": "deedInfoMap",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(DeedInfo)4513_storage)",
            "contract": "DeedNFT",
            "src": "contracts/DeedNFT.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)36_storage",
            "contract": "DeedNFT",
            "src": "contracts/DeedNFT.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)191_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)329_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)10_storage": {
            "label": "uint256[10]",
            "numberOfBytes": "320"
          },
          "t_array(t_uint256)36_storage": {
            "label": "uint256[36]",
            "numberOfBytes": "1152"
          },
          "t_contract(AccessManager)4331": {
            "label": "contract AccessManager",
            "numberOfBytes": "20"
          },
          "t_enum(AssetType)4529": {
            "label": "enum DeedNFT.AssetType",
            "members": [
              "Land",
              "Vehicle",
              "Estate",
              "CommercialEquipment"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(DeedInfo)4513_storage)": {
            "label": "mapping(uint256 => struct DeedNFT.DeedInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(DeedInfo)4513_storage": {
            "label": "struct DeedNFT.DeedInfo",
            "members": [
              {
                "label": "assetType",
                "type": "t_enum(AssetType)4529",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isValidated",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "__gap",
                "type": "t_array(t_uint256)10_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "352"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
